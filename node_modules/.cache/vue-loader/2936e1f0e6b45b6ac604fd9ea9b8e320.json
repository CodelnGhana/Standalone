{"remainingRequest":"/home/suuk/dev_portfolio/codeln/chat_app_standalone/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/suuk/dev_portfolio/codeln/chat_app_standalone/node_modules/vue-beautiful-chat/src/MessageList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/suuk/dev_portfolio/codeln/chat_app_standalone/node_modules/vue-beautiful-chat/src/MessageList.vue","mtime":1558095798203},{"path":"/home/suuk/dev_portfolio/codeln/chat_app_standalone/node_modules/cache-loader/dist/cjs.js","mtime":1558094956032},{"path":"/home/suuk/dev_portfolio/codeln/chat_app_standalone/node_modules/babel-loader/lib/index.js","mtime":1558094938972},{"path":"/home/suuk/dev_portfolio/codeln/chat_app_standalone/node_modules/cache-loader/dist/cjs.js","mtime":1558094956032},{"path":"/home/suuk/dev_portfolio/codeln/chat_app_standalone/node_modules/vue-loader/lib/index.js","mtime":1558094957178}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport Message from './Message.vue'\nimport chatIcon from './assets/chat-icon.svg'\n\nexport default {\n  components: {\n    Message\n  },\n  props: {\n    participants: {\n      type: Array,\n      required: true\n    },\n    messages: {\n      type: Array,\n      required: true\n    },\n    showTypingIndicator: {\n      type: String,\n      required: true\n    },\n    colors: {\n      type: Object,\n      required: true\n    },\n    alwaysScrollToBottom: {\n      type: Boolean,\n      required: true\n    },\n    messageStyling: {\n      type: Boolean,\n      required: true\n    }\n  },\n  methods: {\n    _scrollDown () {\n      this.$refs.scrollList.scrollTop = this.$refs.scrollList.scrollHeight\n    },\n    handleScroll (e) {\n        if (e.target.scrollTop === 0) {\n            this.$emit('scrollToTop')\n        }\n    },\n    shouldScrollToBottom() {\n      return this.alwaysScrollToBottom || (this.$refs.scrollList.scrollTop > this.$refs.scrollList.scrollHeight - 600)\n    },\n    profile(author) {\n      const profile = this.participants.find(profile => profile.id === author)\n\n      // A profile may not be found for system messages or messages by 'me'\n      return profile || {imageUrl: '', name: ''}\n    },\n    chatImageUrl(author) {\n      return this.profile(author).imageUrl\n    },\n    authorName(author) {\n      return this.profile(author).name\n    }\n  },\n  computed: {\n    defaultChatIcon() {\n      return chatIcon\n    }\n  },\n  mounted () {\n    this._scrollDown()\n  },\n  updated () {\n    if (this.shouldScrollToBottom())\n      this.$nextTick(this._scrollDown())\n  }\n}\n",{"version":3,"sources":["MessageList.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MessageList.vue","sourceRoot":"node_modules/vue-beautiful-chat/src","sourcesContent":["<template>\n  <div class=\"sc-message-list\" ref=\"scrollList\" :style=\"{backgroundColor: colors.messageList.bg}\" @scroll=\"handleScroll\">\n    <Message v-for=\"(message, idx) in messages\" :message=\"message\" :chatImageUrl=\"chatImageUrl(message.author)\" :authorName=\"authorName(message.author)\" :key=\"idx\" :colors=\"colors\" :messageStyling=\"messageStyling\" />\n    <Message v-show=\"showTypingIndicator !== ''\" :message=\"{author: showTypingIndicator, type: 'typing'}\" :chatImageUrl=\"chatImageUrl(showTypingIndicator)\" :colors=\"colors\" :messageStyling=\"messageStyling\" />\n  </div>\n</template>\n<script>\nimport Message from './Message.vue'\nimport chatIcon from './assets/chat-icon.svg'\n\nexport default {\n  components: {\n    Message\n  },\n  props: {\n    participants: {\n      type: Array,\n      required: true\n    },\n    messages: {\n      type: Array,\n      required: true\n    },\n    showTypingIndicator: {\n      type: String,\n      required: true\n    },\n    colors: {\n      type: Object,\n      required: true\n    },\n    alwaysScrollToBottom: {\n      type: Boolean,\n      required: true\n    },\n    messageStyling: {\n      type: Boolean,\n      required: true\n    }\n  },\n  methods: {\n    _scrollDown () {\n      this.$refs.scrollList.scrollTop = this.$refs.scrollList.scrollHeight\n    },\n    handleScroll (e) {\n        if (e.target.scrollTop === 0) {\n            this.$emit('scrollToTop')\n        }\n    },\n    shouldScrollToBottom() {\n      return this.alwaysScrollToBottom || (this.$refs.scrollList.scrollTop > this.$refs.scrollList.scrollHeight - 600)\n    },\n    profile(author) {\n      const profile = this.participants.find(profile => profile.id === author)\n\n      // A profile may not be found for system messages or messages by 'me'\n      return profile || {imageUrl: '', name: ''}\n    },\n    chatImageUrl(author) {\n      return this.profile(author).imageUrl\n    },\n    authorName(author) {\n      return this.profile(author).name\n    }\n  },\n  computed: {\n    defaultChatIcon() {\n      return chatIcon\n    }\n  },\n  mounted () {\n    this._scrollDown()\n  },\n  updated () {\n    if (this.shouldScrollToBottom())\n      this.$nextTick(this._scrollDown())\n  }\n}\n</script>\n\n<style scoped>\n.sc-message-list {\n  height: 80%;\n  overflow-y: auto;\n  background-size: 100%;\n  padding: 40px 0px;\n}\n</style>\n"]}]}